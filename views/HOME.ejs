<!-- Home.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Home</title>
<link rel="stylesheet" type="text/css" href="HOME.css">
<style>
  .liked {
    background-color: green;
  }
  .liked:hover {
    background-color: darkgreen; 
}
</style>
</head>
<body>
  <header id="top-bar">
    <h1>UnityHub</h1>
    <nav>
        <ul>
            <li><a href="/home">Home</a></li>
            <li><a href="/addfriend">Add Friends</a></li>
            <li><a href="/chat">Chat</a></li>
        </ul>
    </nav>
</header>
</header>
    <main>
       
    <section id="center">
    <% posts.forEach(post => { %>
    <div class="post" data-post-id="<%= post.id %>" data-liked="<%= post.liked %>">
        <div class="post-header">
            <span class="username"><%= post.username %></span>
        </div>
        <div class="post-content">
            <p><%= post.text %></p>
            <% if (post.file_path) { %>
            <% if (post.file_type === 'image') { %>
            <img src="<%= post.file_path %>" alt="Post Image">
            <% } else if (post.file_type === 'video') { %>
            <video controls>
                <source src="<%= post.file_path %>" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            <% } else if (post.file_type === 'audio') { %>
            <audio controls>
                <source src="<%= post.file_path %>" type="audio/mp3">
                Your browser does not support the audio tag.
            </audio>
            <% } else if (post.file_type === 'document') { %>
            <a href="<%= post.file_path %>">Download Document</a>
            <% } %>
            <% } %>
        </div>
        <div class="post-comments">
            <% if (post.comments && post.comments.length > 0) { %>
            <% post.comments.forEach(comment => { %>
            <div class="comment">
                <p><%= comment.username %>: <%= comment.text %></p>
            </div>
            <% }); %>
            <% } else { %>
            <p class="no-comments">No comments available.</p>
            <% } %>
        </div>
        <div class="comment-input-wrapper">
    <textarea class="comment-textarea" placeholder="Write your comment"></textarea>
    <button class="post-comment-btn">Post</button>
</div>
        <div class="post-actions">
            <button class="like-btn<%= post.liked ? ' liked' : '' %>">Like (<%= post.likes %>)</button>
            <button class="share-btn">Share (<%= post.shares %>)</button>
            <button class="comment-btn">Comment</button>
        </div>
    </div>
    <% }); %>
</section>


        <aside id="right-side">
            <div class="profile">
                <h3><%= user.username %></h3>
            </div>
           
            <div id="post-form">
  <h3>Create New Post</h3>
  <textarea id="post-text" placeholder="What's on your mind?"></textarea>
  <button id="post-btn">Post</button>
</div>


        </aside>
    </main>
    <script src="Home.js"></script>
    <input type="hidden" id="user-id" value="<%= user.id %>"> <!-- Add this input field -->


<script>
    document.querySelectorAll('.like-btn').forEach(async (btn) => {
        const postId = btn.closest('.post').dataset.postId;
        const response = await fetch(`/check-like?postId=${postId}&userId=<%= user.id %>`);
        const data = await response.json();
        if (response.ok) {
            btn.classList.toggle('liked', data.liked);
        } else {
            alert(data.error);
        }

        btn.addEventListener('click', async () => {
            const liked = btn.classList.contains('liked');
            const response = await fetch('/like', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postId, userId: '<%= user.id %>', liked }) 
            });
            const responseData = await response.json();
            if (response.ok) {
                let likeCount = parseInt(btn.textContent.match(/\d+/)[0]);
                likeCount = liked ? likeCount - 1 : likeCount + 1; 
                btn.textContent = `Like (${likeCount})`;
                btn.classList.toggle('liked', responseData.liked);
            } else {
                alert(responseData.error);
            }
        });
    });
</script>
<script>

</script>
<script>
 document.getElementById('post-btn').addEventListener('click', async () => {
  const text = document.getElementById('post-text').value.trim();
  const fileInput = document.getElementById('post-file');
  const userId = document.getElementById('user-id').value; // Get the user ID

  if (!text) {
    alert('Please enter some text ');
    return;
  }

  const formData = new FormData();
  formData.append('userId', userId); // Include the userId in the form data
  formData.append('text', text);
  

  const response = await fetch('/post', {
    method: 'POST',
    body: formData
  });

  if (response.ok) {
    window.location.reload(); // Reload the page to display the new post
  } else {
    const data = await response.json();
    alert(data.error || 'An error occurred while adding your post');
  }
});

</script>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
  const posts = document.querySelectorAll('.post');
  posts.forEach(async (post) => {
    const postId = post.dataset.postId;
    const response = await fetch(`/comments?postId=${postId}`);
    const comments = await response.json();
    const commentContainer = post.querySelector('.post-comments');
    comments.forEach(comment => {
      const commentHTML = `
        <div class="comment">
          <p>${comment.username}: ${comment.text}</p>
        </div>
      `;
      commentContainer.insertAdjacentHTML('beforeend', commentHTML);
    });
  });
});

</script>
<script>
  
</script>
<script>
 document.addEventListener('DOMContentLoaded', async () => {
    const posts = document.querySelectorAll('.post');
    posts.forEach(async (post) => {
        const postId = post.dataset.postId;
        const response = await fetch(`/comments?postId=${postId}`);
        const comments = await response.json();
        const commentContainer = post.querySelector('.post-comments');
        commentContainer.innerHTML = ''; // Clear existing comments
        comments.forEach(comment => {
            const commentHTML = `
                <div class="comment">
                    <p>${comment.username}: ${comment.text}</p>
                </div>
            `;
            commentContainer.insertAdjacentHTML('beforeend', commentHTML);
        });
    });
});

</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const postCommentButtons = document.querySelectorAll('.post-comment-btn');
    
    postCommentButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const postElement = button.closest('.post');
            const postId = postElement.dataset.postId;
            const commentTextarea = postElement.querySelector('.comment-textarea');
            const commentText = commentTextarea.value.trim();

            if (!commentText) {
                alert('Please enter your comment.');
                return;
            }

            // Send the comment data to the server
            const response = await fetch('/comment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ postId, commentText })
            });

            if (response.ok) {
                // Clear the comment textarea
                commentTextarea.value = '';

                // Retrieve the newly added comment data
                const newCommentData = await response.json();
                const name1=newCommentData.username;
                // Create HTML markup for the new comment
                const newCommentHTML = `
                    <div class="comment">
                        <p>${newCommentData.comment.username}: ${newCommentData.comment.text}</p>
                    </div>
                `;

                // Find the comment container within the post element and append the new comment HTML
                const commentContainer = postElement.querySelector('.post-comments');
                commentContainer.insertAdjacentHTML('beforeend', newCommentHTML);
            } else {
                const data = await response.json();
                alert(data.error || 'An error occurred while adding your comment.');
            }
        });
    });
});

</Script>
</body>
</html>
